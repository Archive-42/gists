// ## Global Variables
const ALPHABET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('')
const ARR_LENGTH = ALPHABET.LENGTH
const SEARCH_INTERVAL_TIME = 800
let linear_interval
let binary_interval

// ## Helper Functions
function getArgumentsAsArray() {
  let args = Array.from(arguments)
  if (typeof args[0] === "object") args = args[0]
  if (args[0] && args[0].length) args = args[0]
  return args
}
function sum() {
  let args = getArgumentsAsArray(arguments)
  return Array.from(args).reduce( (p, c) => p + c )
}
function avg() {
  let args = getArgumentsAsArray(arguments)
  return sum(args) / args.length
}
function randomIndex(array) {
  return Math.ceil(Math.random() * array.length) - 1
}
function randomElement(array) {
  return array[randomIndex(array)]
}

// ## Search Functions
function startLinearSearch(value, set) {
  let current_value
  let current_elm
  let current_index = 0
  let num_iterations = 0
  let info = document.getElementById('linear-info')
  linear_interval = setInterval( () => {
    current_value = set[current_index]
    current_elm = document.getElementById(`${current_value}-linear`)
    num_iterations += 1
    if (current_index >= set.length) { 
      clearInterval(linear_interval)
      info.innerHTML = `Index: -1, Value: none, Num Iterations: ${num_iterations}`
      return
    }
    if (current_value != value) {
      current_elm.className = "exempt"
      info.innerHTML = `Index: ${current_index}, Value: ${current_value}, Num Iterations: ${num_iterations}`
    }
    if (current_value == value) {
      clearInterval(linear_interval)
      current_elm.className = "found"
      info.innerHTML = `Index: ${current_index}, Value: ${current_value}, Num Iterations: ${num_iterations}`
      return
    }
    current_index += 1
  }, SEARCH_INTERVAL_TIME)
}
function startBinarySearch(value, set) {
  let current_value
  let current_elm
  let current_index
  let num_iterations = 0
  let min = 0
  let max = set.length - 1
  let info = document.getElementById('binary-info')
  binary_interval = setInterval( () => {
    num_iterations += 1
    if (min > max) {
      clearInterval(binary_interval)
      info.innerHTML = `Index: -1, Value: none, Num Iterations: ${num_iterations}`
      return
    }
    current_index = Math.floor(avg(min, max))
    current_value = set[current_index]
    current_elm = document.getElementById(`${current_value}-binary`)
    if (current_value < value) { 
      min = current_index + 1
      set.slice(0, min).forEach( (n) => { 
        document.getElementById(`${n}-binary`).className = "exempt"
      })
      // current_elm.className = "exempt"
      info.innerHTML = `Index: ${current_index}, Value: ${current_value}, Num Iterations: ${num_iterations}`
    }
    if (current_value > value ) {
      max = current_index - 1
      set.slice(current_index, set.length).forEach( (n) => { 
        document.getElementById(`${n}-binary`).className = "exempt"
      })
      info.innerHTML = `Index: ${current_index}, Value: ${current_value}, Num Iterations: ${num_iterations}`
    }
    if (current_value == value) {
      clearInterval(binary_interval)
      current_elm.className = "found"
      info.innerHTML = `Index: ${current_index}, Value: ${current_value}, Num Iterations: ${num_iterations}`
      return
    }
  }, SEARCH_INTERVAL_TIME)
}


// ## DOM triggered functions
function reset() {
  clearInterval(linear_interval)
  clearInterval(binary_interval)
  let exempt = document.querySelectorAll('.exempt')
  Array.prototype.forEach.call(exempt, (el) => { el.classList.remove('exempt') })
  let found = document.querySelectorAll('.found')
  Array.prototype.forEach.call(found, (el) => { el.classList.remove('found') })
  let info = document.querySelectorAll('.info')
  Array.prototype.forEach.call(info, (el) => { el.innerHTML = '&nbsp;' })
  enableButton('random-btn')
  enableButton('search-btn')
}
function getRandomLetter() {
  reset()
  const value = randomElement(ALPHABET)
  let input = document.getElementById('random-letter')
  input.value = value
  input.style.webkitAnimationName = 'shake'
  input.className = 'shake'
}
function disableButton(id) {
  document.getElementById(id).disabled = true
}
function enableButton(id) {
  document.getElementById(id).disabled = false
}

// ## Setup functions
function setupInputHandlers () {
  let input = document.getElementById('random-letter')
  input.onkeyup = function() {
    this.value = this.value.toUpperCase()
    reset()
  }
  input.addEventListener('webkitAnimationEnd', function() {
    this.style.webkitAnimationName = ''
    this.className = ''
  }, false)
  let random_btn = document.getElementById('random-btn')
  random_btn.onclick = function (e) {
    e.preventDefault()
    getRandomLetter()
  }
  let search_btn = document.getElementById('search-btn')
  search_btn.onclick = function (e) {
    e.preventDefault()
    if (input.value.length) {
      startLinearSearch(input.value, ALPHABET)
      startBinarySearch(input.value, ALPHABET)
    }
  }
}
function inputFocus() {
  let input = document.getElementById('random-letter')
  input.focus()
}

// Let's roll
window.onload = () => {
  setupInputHandlers()
  inputFocus()
}