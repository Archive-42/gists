var canvasCount = 10
var canvasWidth = 400

function drawSin(ctx, waveLength, x = 1, y) {
  var i = 0
  while (i++ < x) {
    ctx.fillRect(
      i,
      y + Math.sin((i / waveLength)) * waveLength,
      1, 1
    )
  }
}

var canvases = new Array(canvasCount)
  .join(' ')
  .split(' ')
  .map((c, i) => {
    var canvas = document.createElement('canvas')
    canvas.width = canvasWidth
    canvas.height = canvasWidth
    container.appendChild(canvas)
    return canvas
  })

var contexts = canvases.map(c => c.getContext('2d'))
contexts.forEach(ctx => ctx.fillStyle = 'red')

function draw() {
  contexts.forEach((ctx, index) => {
    ctx.clearRect(0, 0, canvasWidth, canvasWidth)
    i += 0.0002
    
    drawSin(
      ctx,
      60 / (Math.pow(index + 1, 1 + Math.sin(i))),
      canvasWidth,
      canvasWidth / 2
    )
  })
  requestAnimationFrame(draw)
}

var i = 0
draw()